---

- name: Configure uplink profiles
  vmware.ansible_for_nsxt.nsxt_uplink_profiles:
    hostname: "{{nsxmgr}}"
    username: "{{username}}"
    password: "{{password}}"
    validate_certs: false
    display_name: "{{ item.display_name }}"
    description: "{{ item.description | default(omit) }}"
    mtu: "{{ item.mtu | default(omit) }}"
    resource_type: UplinkHostSwitchProfile
    teaming: "{{ item.teaming }}"
    transport_vlan: "{{ item.transport_vlan | default(omit) }}"
    state: "{{ item.state }}"
  loop: "{{ ulprofiles }}"
  loop_control:
    label: "{{ item.display_name }}"
  tags:
    - ulpconf
    - conf

- name: Gather uplink profiles information
  vmware.ansible_for_nsxt.nsxt_uplink_profiles_facts:
    hostname: "{{nsxmgr}}"
    username: "{{username}}"
    password: "{{password}}"
    validate_certs: false
  register: ulprofiles
  check_mode: yes
  tags:
    - ulpfacts
    - facts

- name: Print gatherd Uplink profiles information
  debug:
    msg:
      - "Name: {{ item.display_name }}"
      - "ID: {{ item.id }}"
      - "MTU: {{ item.mtu | default('Unset, using global MTU') }}"
      - "Teaming policy: {{ item.teaming.policy }}"
      - "Transport VLAN: {{ item.transport_vlan }}"
      - "Active uplinks: {% for ul in item.teaming.active_list %}
        {{ ul.uplink_name }}({{ ul.uplink_type }})
        {% endfor %}"
      - "Standby uplinks: {% for ul in (item.teaming.standby_list | default([])) %}
        {{ ul.uplink_name }}({{ ul.uplink_type }})
        {% endfor %}"
  loop: "{{ ulprofiles.results }}"
  loop_control:
    label: "{{ item.display_name }}"
  when: ulprofiles.failed == false
  tags:
    - ulpfacts
    - facts

